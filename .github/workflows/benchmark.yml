name: Benchmark

on:
  pull_request:
    branches: [ main, master, develop/v0.2.0 ]
    paths:
      - 'src/**'
      - 'app/benchmark.f90'
      - '.github/workflows/benchmark.yml'
  workflow_dispatch:

env:
  FORCE_COLOR: 1

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start MinIO
        run: |
          docker run -d -p 9000:9000 -p 9001:9001 \
            --name minio \
            -e "MINIO_ROOT_USER=minioadmin" \
            -e "MINIO_ROOT_PASSWORD=minioadmin123" \
            minio/minio:latest server /data --console-address ":9001"

          # Wait for MinIO to be ready
          timeout 30 bash -c 'until curl -f http://localhost:9000/minio/health/live; do sleep 1; done'

      - name: Setup MinIO Client (mc)
        run: |
          wget https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv mc /usr/local/bin/

          # Configure mc alias
          mc alias set local http://localhost:9000 minioadmin minioadmin123

          # Create test bucket
          mc mb local/test-bucket
          mc ls local/

      - name: Install NetCDF
        run: |
          sudo apt-get update
          sudo apt-get install -y libnetcdf-dev libnetcdff-dev

      - name: Setup Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: gcc
          version: 12

      - name: Setup FPM
        uses: fortran-lang/setup-fpm@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 netCDF4 numpy

      - name: Create test fixtures and upload to MinIO
        env:
          S3_ENDPOINT_URL: http://localhost:9000
          S3_ACCESS_KEY: minioadmin
          S3_SECRET_KEY: minioadmin123
        run: |
          echo "Creating test NetCDF files..."
          python test/scripts/create_fixtures.py

          echo "Uploading fixtures to MinIO..."
          python test/scripts/upload_minio.py

          echo "Enabling anonymous download access..."
          mc anonymous set download local/test-bucket

      - name: Build benchmark
        run: |
          fpm build benchmark --flag "$(nf-config --fflags)" --verbose

      - name: Run benchmarks
        env:
          S3_ENDPOINT: http://localhost:9000
          S3_BUCKET: test-bucket
        run: |
          echo "Running performance benchmarks..."
          fpm run benchmark --flag "$(nf-config --fflags)"

      - name: Save benchmark results
        if: github.event_name == 'pull_request'
        run: |
          fpm run benchmark --flag "$(nf-config --fflags)" > benchmark-results.txt 2>&1 || true
          echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat benchmark-results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: MinIO logs (if failure)
        if: failure()
        run: docker logs minio
